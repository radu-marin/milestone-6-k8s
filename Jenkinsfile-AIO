properties([
    parameters([
	password( name: 'AWS_SESSION_TOKEN',
		defaultValue: '',
		description: 'AWS Service Account Token'),
        string( name: 'GIT_URL',
                defaultValue: 'https://github.com/radu-marin/milestone-6-k8s',
                description: 'The github repository link'),
        string( name: 'GIT_BRANCH',
                defaultValue: 'main',
                description: 'The github branch link'),
        choice( name: 'ACTION', 
                choices: ['Apply', 'Destroy'], 
                description: 'Choose the required action for infrastructure')        
    ])
])

//OBS: order matters ofc
def env_list = ["live/global/iam", "live/DEV/network", "live/DEV/EKS"]

//OBS: change to node("linux") if needed
node("linux"){
    stage("APPLY/DESTROY tf env"){
        checkout scm
        withCredentials([string(credentialsId: params.AWS_SESSION_TOKEN, variable: 'AWS_SESSION_TOKEN')]) { 
            docker.image('hashicorp/terraform').withRun('-e "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN"') { c ->
                docker.image('hashicorp/terraform').inside('--entrypoint ""') {
                    
                    if (params.ACTION == "Apply"){
                        for(String item : env_list) {
                            //def value=item
                            sh '''
                            cd '''+item+'''
                            echo "Current working directory is: $(pwd)"
                            terraform init
                            terraform plan -out=plan
                            '''
                            env.PLAN = input message: 'Do you want to implement plan?', parameters: [choice(name: 'PLAN', choices: ['YES', 'NO'], description: 'Implement plan')]
                            if (env.PLAN == 'YES') {
                                sh '''
                                cd '''+item+'''
                                terraform apply plan
                                '''
                            }
                        }
                    }
                    
                    if (params.ACTION == "Destroy"){
                        for(String item : env_list.reverse()) {
                            //def value=item
                            sh '''
                            cd '''+item+'''
                            echo "Current working directory is: $(pwd)"
                            terraform init
                            terraform plan -destroy -out=plan
                            '''
                            env.PLAN = input message: 'Do you want to implement DESTRUCTION plan?', parameters: [choice(name: 'PLAN', choices: ['YES', 'NO'], description: 'Implement plan')]
                            if (env.PLAN == 'YES') {
                                sh '''
                                cd '''+item+'''
                                terraform apply plan
                                '''
                            }
                        }
                    }                    
                }
            }            
        }
    }
}
